import{_ as p,r as o,o as l,c as i,a as n,b as s,d as e,e as t}from"./app.76e8dadb.js";const r={},c=n("h1",{id:"\u5728windows\u4E0A\u4F7F\u7528amd\u663E\u5361\u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5728windows\u4E0A\u4F7F\u7528amd\u663E\u5361\u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60","aria-hidden":"true"},"#"),s(" \u5728Windows\u4E0A\u4F7F\u7528AMD\u663E\u5361\u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60")],-1),d=n("blockquote",null,[n("p",null,"\u521D\u6B21\u7F16\u5199\u65F6\u95F4\uFF1A2022/09/26"),n("p",null,"\u4E0A\u6B21\u66F4\u65B0\u65F6\u95F4\uFF1A2023/07/15")],-1),u=n("p",null,"\u4EE5\u5F80\uFF0CAMD\u663E\u5361\u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60\uFF0C\u9700\u8981\u4F7F\u7528Linux\u7CFB\u7EDF\uFF0C\u5E76\u5B89\u88C5ROCm\u3002",-1),m={href:"https://github.com/microsoft/DirectML",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="\u5982\u4F55\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u914D\u7F6E" aria-hidden="true">#</a> \u5982\u4F55\u914D\u7F6E</h2><p>\u8FD9\u91CC\u4EE5<code>PyTorch-DirectML</code>\u4E3A\u4F8B\u8FDB\u884C\u914D\u7F6E\uFF1A</p><ol><li><p>\uFF08\u53EF\u9009\uFF09\u5B89\u88C5<code>MiniConda</code>\u73AF\u5883\uFF0C\u5E76\u914D\u7F6E\u73AF\u5883\u53D8\u91CF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Path\\To\\Miniconda3
Path\\To\\Miniconda3\\Scripts
Path\\To\\Miniconda3\\Library\\bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u521B\u5EFA\u4E00\u4E2A<code>Python</code>\u73AF\u5883\uFF08\u82E5\u4E0D\u4F7F\u7528<code>Conda</code>\uFF0C\u4E5F\u9700\u4F7F\u7528<code>3.8-3.10</code>\u7248\u672C\uFF09</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>conda create <span class="token parameter variable">-n</span> directML <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u6FC0\u6D3B\u73AF\u5883\u5E76\u5F00\u59CB\u5B89\u88C5\u4F9D\u8D56</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>conda activate directML
pip <span class="token function">install</span> torch-directml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u65B9\u6CD5</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> torch_directml
dml <span class="token operator">=</span> torch_directml<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># device=dml</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u8FD0\u884C\u4E00\u4E2A\u5F00\u6E90\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u4E00\u4E2A\u5F00\u6E90\u9879\u76EE" aria-hidden="true">#</a> \u8FD0\u884C\u4E00\u4E2A\u5F00\u6E90\u9879\u76EE</h2>`,4),k={href:"https://github.com/TencentARC/GFPGAN",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/xinntao/Real-ESRGAN",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/TencentARC/GFPGAN#wrench-dependencies-and-installation",target:"_blank",rel:"noopener noreferrer"},g=t(`<p><strong>\u6559\u7A0B\u4E2D\u63D0\u53CA\uFF1A\u5982\u679C\u4E0D\u4EC5\u60F3\u8981\u4FEE\u590D\u4EBA\u8138\uFF0C\u8FD8\u9700\u8981\u589E\u5F3A\u80CC\u666F\uFF0C\u5219\u8FD8\u9700\u8981\u5B89\u88C5Real-ESRGAN\u3002</strong></p><p>\u5728\u5B8C\u6210\u6559\u7A0B\u540E\uFF0C\u9700\u8981\u624B\u52A8\u4E0B\u8F7D\u9884\u8BAD\u7EC3\u7684\u6A21\u578B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.3.pth <span class="token parameter variable">-P</span> experiments/pretrained_models
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5176\u4ED6\u5DE5\u5177\u4E0B\u8F7D\u540E\u79FB\u52A8\u5230\u5BF9\u5E94\u76EE\u5F55\u3002</p><p>\u53E6\u5916\uFF0C\u6B64\u9879\u76EE\u8FD8\u4F9D\u8D56\u4E86\u5F88\u591A\u5176\u4ED6\u7684\u6DF1\u5EA6\u795E\u7ECF\u7F51\u7EDC\uFF0C\u8FD9\u4E9B\u53C2\u6570\u4F1A\u5728\u9996\u6B21\u8FD0\u884C\u65F6\u4E0B\u8F7D\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u89C2\u5BDF\u63A7\u5236\u53F0\u4FE1\u606F\u8FDB\u884C\u624B\u52A8\u4E0B\u8F7D\uFF0C\u5E76\u79FB\u52A8\u5230\u5BF9\u5E94\u76EE\u5F55\u3002</p></blockquote>`,4),_=t(`<li><p>\u9879\u76EE\u7684\u4F7F\u7528\u65B9\u6CD5\u4E3A\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Usage: python inference_gfpgan.py <span class="token parameter variable">-i</span> inputs/whole_imgs <span class="token parameter variable">-o</span> results <span class="token parameter variable">-v</span> <span class="token number">1.3</span> <span class="token parameter variable">-s</span> <span class="token number">2</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span><span class="token punctuation">..</span>.

  <span class="token parameter variable">-h</span>                   show this <span class="token builtin class-name">help</span>
  <span class="token parameter variable">-i</span> input             Input image or folder. Default: inputs/whole_imgs
  <span class="token parameter variable">-o</span> output            Output folder. Default: results
  <span class="token parameter variable">-v</span> version           GFPGAN model version. Option: <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1.2</span> <span class="token operator">|</span> <span class="token number">1.3</span>. Default: <span class="token number">1.3</span>
  <span class="token parameter variable">-s</span> upscale           The final upsampling scale of the image. Default: <span class="token number">2</span>
  <span class="token parameter variable">-bg_upsampler</span>        background upsampler. Default: realesrgan
  <span class="token parameter variable">-bg_tile</span>             Tile size <span class="token keyword">for</span> background sampler, <span class="token number">0</span> <span class="token keyword">for</span> no tile during testing. Default: <span class="token number">400</span>
  <span class="token parameter variable">-suffix</span>              Suffix of the restored faces
  <span class="token parameter variable">-only_center_face</span>    Only restore the center face
  <span class="token parameter variable">-aligned</span>             Input are aligned faces
  <span class="token parameter variable">-ext</span>                 Image extension. Options: auto <span class="token operator">|</span> jpg <span class="token operator">|</span> png, auto means using the same extension as inputs. Default: auto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5173\u4E8EReal-ESRGAN</p><p>\u7531\u4E8E\u5176\u5728CPU\u4E0A\u8FD0\u884C\u8F83\u6162\uFF0C\u6240\u4EE5\u5728CPU\u8BBE\u5907\u4E0A\u9ED8\u8BA4\u5173\u95ED\uFF0C\u5728<code>inference_gfpgan.py</code>\u7B2C59\u884C\uFF0C\u5C06\u8FD9\u90E8\u5206\u4EE3\u7801\u4FEE\u6539\u5373\u53EF\u542F\u7528\u8BE5\u529F\u80FD\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># ------------------------ set up background upsampler ------------------------</span>
<span class="token keyword">if</span> args<span class="token punctuation">.</span>bg_upsampler <span class="token operator">==</span> <span class="token string">&#39;realesrgan&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">from</span> basicsr<span class="token punctuation">.</span>archs<span class="token punctuation">.</span>rrdbnet_arch <span class="token keyword">import</span> RRDBNet
    <span class="token keyword">from</span> realesrgan <span class="token keyword">import</span> RealESRGANer
    model <span class="token operator">=</span> RRDBNet<span class="token punctuation">(</span>num_in_ch<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> num_out_ch<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> num_feat<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> num_block<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span> num_grow_ch<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
    bg_upsampler <span class="token operator">=</span> RealESRGANer<span class="token punctuation">(</span>
        scale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
        model_path<span class="token operator">=</span><span class="token string">&#39;https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.1/RealESRGAN_x2plus.pth&#39;</span><span class="token punctuation">,</span>
        model<span class="token operator">=</span>model<span class="token punctuation">,</span>
        tile<span class="token operator">=</span>args<span class="token punctuation">.</span>bg_tile<span class="token punctuation">,</span>
        tile_pad<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
        pre_pad<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
        half<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># \u89C6\u662F\u5426\u652F\u6301fp16\u800C\u5B9A\uFF0CCPU\u4E0D\u652F\u6301</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    bg_upsampler <span class="token operator">=</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u81F3\u6B64\uFF0C\u53EF\u5728CPU\u4E0A\u987A\u5229\u5B8C\u6210\u5B8C\u6574\u7684\u56FE\u7247\u4FEE\u590D\u5DE5\u4F5C\u3002</strong></p></li><li><p>\u652F\u6301DirectML</p><p>\u5728<code>inference_gfpgan.py</code>\u4E2D\uFF1A\u4E3A<code>RealESRGANer</code>\u548C<code>GFPGANer</code>\u7684\u6784\u9020\u51FD\u6570\uFF0C\u6DFB\u52A0<code>device</code>\u53C2\u6570\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> torch_directml
dml <span class="token operator">=</span> torch_directml<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token punctuation">)</span>

bg_upsampler <span class="token operator">=</span> RealESRGANer<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> device<span class="token operator">=</span>dml<span class="token punctuation">)</span>
restorer <span class="token operator">=</span> GFPGANer<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> device<span class="token operator">=</span>dml<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),f=t('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>   \n**\u4F46\u76EE\u524D\u5B58\u5728\u4E24\u4E2A\u95EE\u9898\uFF1A**\n   \n   * `upsampler`\u5728\u6267\u884C\u51E0\u6B21\u540E\uFF0C\u4FBF\u4F1A\u89E6\u53D1`basicsr\\archs\\arch_util.py`\u4E2D\u7684\u65AD\u8A00\uFF0C\u76EE\u524D\u6682\u672A\u89E3\u51B3\uFF1A\n   \n  ```python\n     assert hh % scale == 0 and hw % scale == 0\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679C\u7981\u7528<code>realesrgan</code>\uFF0C\u5219\u4EBA\u8138\u53EF\u4EE5\u6B63\u5E38\u5B8C\u6210\u5904\u7406\uFF0C\u4F46\u5904\u7406\u7ED3\u679C\u5341\u5206\u8BE1\u5F02\u3002</li></ul><p>\u4E3A\u907F\u514D\u5F15\u8D77\u4E0D\u9002\uFF0C\u8FD9\u91CC\u4E0D\u5C55\u793A\u7ED3\u679C\uFF0C\u95EE\u9898\u5728\u4E8ECPU\u8F93\u51FA\u7ED3\u679C\u6B63\u5E38\uFF0C\u800CDirectML\u8F93\u51FA\u5F02\u5E38\u3002</p>',3),x={href:"https://github.com/microsoft/DirectML/issues/482",target:"_blank",rel:"noopener noreferrer"};function w(y,R){const a=o("ExternalLinkIcon");return l(),i("div",null,[c,d,u,n("p",null,[s("\u800C\u73B0\u5728\uFF0C\u5FAE\u8F6F\u5F00\u6E90\u4E86"),n("a",m,[s("DirectML"),e(a)]),s("\u9879\u76EE\uFF0C\u4F7F\u5F97\u4EFB\u4F55\u652F\u6301DirectX12\u7684\u663E\u5361\uFF0C\u90FD\u53EF\u4EE5\u5728Windows\u5E73\u53F0\u4E0A\u8FDB\u884C\u6DF1\u5EA6\u5B66\u4E60\u3002")]),v,n("p",null,[s("\u9009\u62E9\u4E86\u817E\u8BAF\u5F00\u6E90\u7684"),n("a",k,[s("GFPGAN"),e(a)]),s("\uFF0C\u8FD9\u662F\u4E00\u4E2A\u6062\u590D\u771F\u5B9E\u4EBA\u8138\u7684\u6DF1\u5EA6\u795E\u7ECF\u7F51\u7EDC\uFF0C\u540C\u65F6\u5185\u7F6E\u4E86"),n("a",b,[s("Real-ESRGAN"),e(a)]),s("\u652F\u6301\uFF0C\u53EF\u4EE5\u6062\u590D\u4EBA\u8138\u4E4B\u5916\u7684\u80CC\u666F\u3002")]),n("ol",null,[n("li",null,[n("p",null,[s("\u6309\u7167\u5176"),n("a",h,[s("\u63D0\u793A"),e(a)]),s("\u8FDB\u884C\u5B89\u88C5\uFF1A")]),g]),_]),f,n("p",null,[s("\u7ECF\u8FC7\u5206\u6790\uFF0C\u95EE\u9898\u53EF\u80FD\u51FA\u5728\u53CC\u7EBF\u6027\u63D2\u503C\u7B97\u5B50\u5F53\u4E2D\uFF0C\u6211\u5DF2\u5728DirectML\u9879\u76EE\u5F53\u4E2D\u63D0\u51FAIssue\uFF0C"),n("a",x,[s("\u70B9\u51FB\u8FD9\u91CC\u8DF3\u8F6C"),e(a)]),s("\u3002")])])}const N=p(r,[["render",w],["__file","deep_learning_with_amd_gpu_on_windows.html.vue"]]);export{N as default};
